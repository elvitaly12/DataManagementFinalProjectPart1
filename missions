
* move pages to be only after login
* change to h5 at show results

* tests
* prepare for submitting (script, enviro.yml, package.json etc...)
* look at piazza before submitting project.


Misc:

If there is more time:
* add field isMultiple if the question is multiple answers or not ( in UI )
* design more interesting pages
* encrypt password, maybe in headers (Basic auth.. REST, jwt?)
* is the presentation from the submission?

done:
* open git repository
* create initial bot
* design DB
* support database 'register' and 'remove' commands
* check if works here
* change db name to beautipoll_db
* fix code esthetics
* send message, current response
* handle case of unregister to chat_id that isn't registered yet.
* handle case of register/unregister without name.
* check if username active before unregister. if not active, send doesn't exists
* correct error numbers
*change internal without digits

* add "/start" support according to the file V
* write "Unsupported action" for unsupported actions (not needed )
* implement polls in telegram
* design Login page
* use logo website
* in question table put telegram_id ( as telegram id is per question )
* change bot name
* think how to store questions for one poll, and keep an order
* fix logout
* design Admins page and add a nav bar item
  AddAdmin an option for admins to register admin page (username+hash password)
  + CurrentAdminsList page
* understand how to communicate between UI and backend
* test sending polls to multiple users.
* change password to hash (update db and backend code) (tirgul 7)
* implement login logic (check credentials in db)
  and add_admin logic
* when sending a follow up poll, check if a user is active before sending him a poll.
* implement CreateNewPoll page (and move create polls to ui)
* fix bug of form not empty
* show chart
* check activate poll
* check function of votes counters
