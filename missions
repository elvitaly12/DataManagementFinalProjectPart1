
Bot - Vitaly:
* change bot name+hide token
* send polls to all of the users.
  when sending a follow up poll, check if a user is active before sending him a poll.

UI - Ofir:
* implement login logic

UI - Next:
* design Admins page -
  AddAdmin an option for admins to register admin page (username+hash password)
  + CurrentAdminsList page
* design CreateNewPoll page
* design showPolls

* change password to hash
* find a way to work on the same DB (maybe migration?)

* move create polls to ui
* think how to store questions for one poll, and keep an order


If there is more time:
* add field isMultiple if the question is multiple answers or not ( in UI )
* design more interesting pages




done:
* open git repository
* create initial bot
* design DB
* support database 'register' and 'remove' commands
* check if works here
* change db name to beautipoll_db
* fix code esthetics
* send message, current response
* handle case of unregister to chat_id that isn't registered yet.
* handle case of register/unregister without name.
* check if username active before unregister. if not active, send doesn't exists
* correct error numbers
*change internal without digits

* add "/start" support according to the file V
* write "Unsupported action" for unsupported actions (not needed )
* implement polls in telegram
* design Login page
* use logo website
* in question table put telegram_id ( as telegram id is per question )
